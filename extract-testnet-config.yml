---
#Copy genesis.json and config.toml from the testnet

#variable "service" is required

- hosts: "{{ lookup('env','TF_VAR_TESTNET_NAME') }}:tag_Environment_{{ lookup('env','TF_VAR_TESTNET_NAME') }}"
  gather_facts: no

  vars:

    testnet_name: "{{lookup('env','TF_VAR_TESTNET_NAME')}}"
    output_dir: "{{OUTPUT|default('.')}}"

  tasks:

  - name: Create local folder structure
    file: "path={{item}} state=directory recurse=yes"
    with_items:
    - "{{output_dir}}/{{testnet_name}}/{{service}}"
    connection: local
    run_once: true

  - name: Copy files from remote host
    synchronize: "mode=pull src={{item.src}} dest={{item.dest}}"
    with_items:
    - { src: "/etc/{{service}}/genesis.json", dest: "{{output_dir}}/{{testnet_name}}/{{service}}" }
    - { src: "/etc/{{service}}/config.toml", dest: "{{output_dir}}/{{testnet_name}}/{{service}}" }
    become: yes
    become_user: "{{service}}"
    run_once: true

  - name: Get tendermint version
    when: service != 'tendermint'
    command: "tendermint version"
    register: tendermintversion
    become: no
    run_once: true

  - name: Get service version
    when: service != 'tendermint'
    command: "{{service}} version"
    register: serviceversion
    become: no
    run_once: true

  - name: Write tendermint version
    when: service != 'tendermint'
    copy: "content={{tendermintversion.stdout}} dest={{output_dir}}/{{testnet_name}}/{{service}}/tendermintversion.txt"
    become: no
    run_once: true
    connection: local

  - name: Write service version
    when: service != 'tendermint'
    copy: "content={{serviceversion.stdout}} dest={{output_dir}}/{{testnet_name}}/{{service}}/{{service}}version.txt"
    become: no
    run_once: true
    connection: local
 
